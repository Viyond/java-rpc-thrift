{
  "name": "Java-rpc-thrift",
  "tagline": "",
  "body": "### 简单介绍\r\n这是一个简单小巧的Java RPC框架，非常适用于Java平台内、为系统之间的交互提供了、高性能、低延迟的方案。适合在集群数量偏少的情况下使用（50台以下集群环境）。当然、它也可以在大型集群环境下使用，由于未引入Zookeeper支持，所以它在大型集群环境下不够成熟，这仅仅是额外的功能不成熟，但是作为RPC框架来用已经足够，至少比使用rest、webservice等性能高得多，也比直接使用thrift、avro等方便的多。\r\n\r\n为了让它保持小巧、简单，所以不打算引入Zookeeper支持。我认为50台server组成的集群，已经可以满足绝大部分需求，所以简单、小巧、高性能才是最重要的。如果你认为简单不重要，或者你认为成熟度是第一的，那么可以出门左转，淘宝的Dubbo在等着你。http://dubbo.io/\r\n\r\n\r\n### 背景以及需求\r\n心血来潮，在公司很无聊，这才是主要原因。\r\n其次是我们要对系统模块进行拆分，从原系统移出，那么就需要寻找一个远程调用工具。\r\n1、基于HTTP（rest、webservice等） 性能很差，难以支持高并发，而且组装HTTP请求也比较麻烦，加上我们对性能要求高，所以此项被pass\r\n2、基于thrift，性能虽好，但是使用起来非常麻烦，需要频繁的生成代码，而且对Client开发者要求较高，需要自己写连接池。而且thrift的服务端需要将业务逻辑全部放在一个接口（一个接口就需要发布一个服务，占用一个线程池），这将是个很恶心的事，所以也被pass\r\n\r\n正因为以上两点，所以我打算自己写一个框架。要求是：简单，小巧，依赖少，高性能，高并发。无学习成本，源码简单可定制修改。\r\n\r\n如果你也在寻找这样一个框架，那么很值得看一下。\r\n\r\n### 框架详解\r\n我做完了这个框架，没多久便发现了Dubbo，在看了Dubbo的设计以后，惊喜的发现此框架和Dubbo的核心功能几乎一样。\r\n说起来很简单，就是在Client端代理一个接口，用户调用这个接口的方法，将进行远程调用，参数传递到远程Server端，Server端处理并且将数据返回给Client，作为方法的返回值，这一切都对用户透明的。\r\n\r\n项目底层使用thrift，这是为了使用thrift的各种Server模型，以此来支持高并发，低延迟。没有使用Netty，原因是Netty较重，延迟要比thrift稍高一些，Netty适合处理高吞吐的异步IO，对于RPC的同步调用。综合起来看，Netty并不适合。您不用担心thrift性能有问题，也不用担心thrift框架太重，我做过测试，性能和直接使用soket通信几乎不相上下，thrift框架的代码特别少，仅仅是对soket的简单封装，框架非常轻便。\r\n\r\n序列化工具使用kryo，这也是性能的关键，您也可以自己去查一下kryo相关资料，这里就不说他了，序列化结果很小，速度很快就是了。\r\n\r\n框架依赖 thrift、kryo、commons-pool、spring-beans（其中kryo可以自行替换为您喜欢的序列化工具）\r\n\r\n集群支持随机负载均衡，轮询负载均衡（您也可以自己写负载均衡实现），优雅停机(kill pid不要加-9)，容错（集群某几台挂掉并不影响服务）\r\n\r\n线程模型 以ThriftThreadPoolServer、ThriftTThreadedSelectorServer 两种为主，具体细节参考thrift（您也可以自己实现Server）\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}